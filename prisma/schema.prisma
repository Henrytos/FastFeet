generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(uuid())
  role         String @default("DELIVERY_MAN")
  name         String
  cpf          String @unique
  passwordHash String

  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt() @map("updated_at")
  orders        Order[]
  notifications Notification[]

  @@map("users")
}

model Order {
  id String @id @default(uuid())

  // values:'pending' | 'withdrawn' | 'delivered' | 'canceled'
  orderStatus   String  @default("pending") @map("order_status")
  deliveryManId String? @map("delivery_man_id")
  deliveryMan   User?   @relation(fields: [deliveryManId], references: [id])

  recipientId String    @map("recipient_id")
  recipient   Recipient @relation(fields: [recipientId], references: [id])

  photoId String?
  photo   Photo?  @relation(fields: [photoId], references: [id])

  addressId String
  address   Address? @relation(fields: [addressId], references: [id])

  createdAt   DateTime  @default(now()) @map("created_at")
  deliveryAt  DateTime? @map("delivery_at")
  withdrawnAt DateTime? @map("withdrawn_at")
  updatedAt   DateTime  @updatedAt() @map("updated_at")

  @@map("orders")
}

model Photo {
  id       String  @id @default(uuid())
  filename String
  url      String
  orderId  String? @map("order_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")
  orders    Order[]

  @@map("photos")
}

model Recipient {
  id    String @id @default(uuid())
  name  String
  email String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")
  orders    Order[]

  @@map("recipients")
}

model Address {
  id           String @id @default(uuid())
  state        String
  city         String
  neighborhood String
  street       String
  zip          String
  number       String
  latitude     String
  longitude    String

  orders Order[]

  @@map("addresses")
}

model Notification {
  id      String @id @default(uuid())
  title   String
  content String

  recipient   User?   @relation(fields: [recipientId], references: [id])
  recipientId String?

  createdAt DateTime  @default(now()) @map("created_at")
  readAt    DateTime? @map("read_at")
}
